<?php
/**
 * SalesDataInvoiceItemInterfaceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Magento2Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Magento Enterprise
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Magento2Client;

/**
 * SalesDataInvoiceItemInterfaceTest Class Doc Comment
 *
 * @category    Class */
// * @description Invoice item interface. An invoice is a record of the receipt of payment for an order. An invoice item is a purchased item in an invoice.
/**
 * @package     Swagger\Magento2Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SalesDataInvoiceItemInterfaceTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "SalesDataInvoiceItemInterface"
     */
    public function testSalesDataInvoiceItemInterface()
    {
    }

    /**
     * Test attribute "additional_data"
     */
    public function testPropertyAdditionalData()
    {
    }

    /**
     * Test attribute "base_cost"
     */
    public function testPropertyBaseCost()
    {
    }

    /**
     * Test attribute "base_discount_amount"
     */
    public function testPropertyBaseDiscountAmount()
    {
    }

    /**
     * Test attribute "base_discount_tax_compensation_amount"
     */
    public function testPropertyBaseDiscountTaxCompensationAmount()
    {
    }

    /**
     * Test attribute "base_price"
     */
    public function testPropertyBasePrice()
    {
    }

    /**
     * Test attribute "base_price_incl_tax"
     */
    public function testPropertyBasePriceInclTax()
    {
    }

    /**
     * Test attribute "base_row_total"
     */
    public function testPropertyBaseRowTotal()
    {
    }

    /**
     * Test attribute "base_row_total_incl_tax"
     */
    public function testPropertyBaseRowTotalInclTax()
    {
    }

    /**
     * Test attribute "base_tax_amount"
     */
    public function testPropertyBaseTaxAmount()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "discount_amount"
     */
    public function testPropertyDiscountAmount()
    {
    }

    /**
     * Test attribute "entity_id"
     */
    public function testPropertyEntityId()
    {
    }

    /**
     * Test attribute "discount_tax_compensation_amount"
     */
    public function testPropertyDiscountTaxCompensationAmount()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "parent_id"
     */
    public function testPropertyParentId()
    {
    }

    /**
     * Test attribute "price"
     */
    public function testPropertyPrice()
    {
    }

    /**
     * Test attribute "price_incl_tax"
     */
    public function testPropertyPriceInclTax()
    {
    }

    /**
     * Test attribute "product_id"
     */
    public function testPropertyProductId()
    {
    }

    /**
     * Test attribute "row_total"
     */
    public function testPropertyRowTotal()
    {
    }

    /**
     * Test attribute "row_total_incl_tax"
     */
    public function testPropertyRowTotalInclTax()
    {
    }

    /**
     * Test attribute "sku"
     */
    public function testPropertySku()
    {
    }

    /**
     * Test attribute "tax_amount"
     */
    public function testPropertyTaxAmount()
    {
    }

    /**
     * Test attribute "extension_attributes"
     */
    public function testPropertyExtensionAttributes()
    {
    }

    /**
     * Test attribute "order_item_id"
     */
    public function testPropertyOrderItemId()
    {
    }

    /**
     * Test attribute "qty"
     */
    public function testPropertyQty()
    {
    }
}
