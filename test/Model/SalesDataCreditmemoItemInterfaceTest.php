<?php
/**
 * SalesDataCreditmemoItemInterfaceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Magento2Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Magento Enterprise
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Magento2Client;

/**
 * SalesDataCreditmemoItemInterfaceTest Class Doc Comment
 *
 * @category    Class */
// * @description Credit memo item interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo item is an invoiced item for which a merchant creates a credit memo.
/**
 * @package     Swagger\Magento2Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SalesDataCreditmemoItemInterfaceTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "SalesDataCreditmemoItemInterface"
     */
    public function testSalesDataCreditmemoItemInterface()
    {
    }

    /**
     * Test attribute "additional_data"
     */
    public function testPropertyAdditionalData()
    {
    }

    /**
     * Test attribute "base_cost"
     */
    public function testPropertyBaseCost()
    {
    }

    /**
     * Test attribute "base_discount_amount"
     */
    public function testPropertyBaseDiscountAmount()
    {
    }

    /**
     * Test attribute "base_discount_tax_compensation_amount"
     */
    public function testPropertyBaseDiscountTaxCompensationAmount()
    {
    }

    /**
     * Test attribute "base_price"
     */
    public function testPropertyBasePrice()
    {
    }

    /**
     * Test attribute "base_price_incl_tax"
     */
    public function testPropertyBasePriceInclTax()
    {
    }

    /**
     * Test attribute "base_row_total"
     */
    public function testPropertyBaseRowTotal()
    {
    }

    /**
     * Test attribute "base_row_total_incl_tax"
     */
    public function testPropertyBaseRowTotalInclTax()
    {
    }

    /**
     * Test attribute "base_tax_amount"
     */
    public function testPropertyBaseTaxAmount()
    {
    }

    /**
     * Test attribute "base_weee_tax_applied_amount"
     */
    public function testPropertyBaseWeeeTaxAppliedAmount()
    {
    }

    /**
     * Test attribute "base_weee_tax_applied_row_amnt"
     */
    public function testPropertyBaseWeeeTaxAppliedRowAmnt()
    {
    }

    /**
     * Test attribute "base_weee_tax_disposition"
     */
    public function testPropertyBaseWeeeTaxDisposition()
    {
    }

    /**
     * Test attribute "base_weee_tax_row_disposition"
     */
    public function testPropertyBaseWeeeTaxRowDisposition()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "discount_amount"
     */
    public function testPropertyDiscountAmount()
    {
    }

    /**
     * Test attribute "entity_id"
     */
    public function testPropertyEntityId()
    {
    }

    /**
     * Test attribute "discount_tax_compensation_amount"
     */
    public function testPropertyDiscountTaxCompensationAmount()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "order_item_id"
     */
    public function testPropertyOrderItemId()
    {
    }

    /**
     * Test attribute "parent_id"
     */
    public function testPropertyParentId()
    {
    }

    /**
     * Test attribute "price"
     */
    public function testPropertyPrice()
    {
    }

    /**
     * Test attribute "price_incl_tax"
     */
    public function testPropertyPriceInclTax()
    {
    }

    /**
     * Test attribute "product_id"
     */
    public function testPropertyProductId()
    {
    }

    /**
     * Test attribute "qty"
     */
    public function testPropertyQty()
    {
    }

    /**
     * Test attribute "row_total"
     */
    public function testPropertyRowTotal()
    {
    }

    /**
     * Test attribute "row_total_incl_tax"
     */
    public function testPropertyRowTotalInclTax()
    {
    }

    /**
     * Test attribute "sku"
     */
    public function testPropertySku()
    {
    }

    /**
     * Test attribute "tax_amount"
     */
    public function testPropertyTaxAmount()
    {
    }

    /**
     * Test attribute "weee_tax_applied"
     */
    public function testPropertyWeeeTaxApplied()
    {
    }

    /**
     * Test attribute "weee_tax_applied_amount"
     */
    public function testPropertyWeeeTaxAppliedAmount()
    {
    }

    /**
     * Test attribute "weee_tax_applied_row_amount"
     */
    public function testPropertyWeeeTaxAppliedRowAmount()
    {
    }

    /**
     * Test attribute "weee_tax_disposition"
     */
    public function testPropertyWeeeTaxDisposition()
    {
    }

    /**
     * Test attribute "weee_tax_row_disposition"
     */
    public function testPropertyWeeeTaxRowDisposition()
    {
    }

    /**
     * Test attribute "extension_attributes"
     */
    public function testPropertyExtensionAttributes()
    {
    }
}
